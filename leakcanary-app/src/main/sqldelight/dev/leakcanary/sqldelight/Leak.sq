CREATE TABLE leak (
  signature TEXT PRIMARY KEY,
  short_description TEXT,
  is_library_leak INTEGER AS Boolean,
  is_read INTEGER AS Boolean DEFAULT 0
);

insert:
INSERT INTO leak (
signature,
short_description,
is_library_leak
)
VALUES (?, ?, ?);

retrieveLeakReadStatuses:
SELECT
signature
, is_read
FROM leak
WHERE signature IN :signatures;

retrieveAllLeaks:
SELECT
l.signature
, MIN(l.short_description)
, MAX(h.created_at_time_millis) AS created_at_time_max_millis
, COUNT(*)  AS leak_trace_count
, MIN(l.is_library_leak) AS is_library_leak
, MAX(l.is_read) AS is_read
FROM leak_trace lt
LEFT JOIN leak l ON lt.leak_signature = l.signature
LEFT JOIN heap_analysis h ON lt.heap_analysis_id = h.id
GROUP BY 1
ORDER BY leak_trace_count DESC, created_at_time_max_millis DESC;

markAsRead:
UPDATE leak
SET is_read = 1
WHERE signature = :signature;
